/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package tetris.gui;

import java.awt.Toolkit;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JSpinner;
import tetris.lib.utils.Configurations;
import tetris.lib.utils.SoundPlayer;

/**
 *
 * @author Telmo
 */
public class Configs extends javax.swing.JFrame {

    private SoundPlayer soundp;
    private Configurations config;
    private Boolean isFirstTime = true;

    /**
     * Creates new form Config
     *
     * @param config
     * @param soundp
     */
    public Configs(Configurations config, SoundPlayer soundp) {

        this.config = config;
        this.soundp = soundp;

        // Read the configuration from a file
        this.config.ReadConfig(config.getCurrentPath());
        // System.out.println(this.config.getLines());
        // Initialize GUI components
        initComponents();
        setSize(405, 395);
        // Set the default close operation, location, and visibility of the frame
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setVisible(true);

        JLabel background;

        // Set the icon image of the frame
        setIconImage(Toolkit.getDefaultToolkit().getImage(this.config.getFilePathImage("icon.png")));

        // Create an image icon using the specified image file
        ImageIcon img = new ImageIcon(this.config.getFilePathImage("configs.png"));

        // Create a JLabel with the image icon and add it to the frame
        background = new JLabel("", img, JLabel.CENTER);
        background.setBounds(0, 0, 390, 355);
        add(background);

        // Set the selected radio button based on the difficulty value
        switch (this.config.getDifficulty()) {
            case 0 ->
                RB_Easy.setSelected(true);
            case 1 ->
                RB_Normal.setSelected(true);
            case 2 ->
                RB_Hard.setSelected(true);
            default ->
                RB_Normal.setSelected(true);
        }

        // Set the value of the volume slider
        volumeMusic.setValue((int) this.soundp.getVolumeToSlider());

        // Set the values of the lines and cols input fields
        lines.setValue(this.config.getLines());
        cols.setValue(this.config.getCols());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lines = new javax.swing.JSpinner();
        BT_Save = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        volumeMusic = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        RB_Easy = new javax.swing.JRadioButton();
        RB_Normal = new javax.swing.JRadioButton();
        RB_Hard = new javax.swing.JRadioButton();
        cols = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        lines.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lines.setModel(new javax.swing.SpinnerNumberModel(20, 8, 30, 1));
        lines.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lines", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        lines.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lines.setFocusable(false);
        lines.setRequestFocusEnabled(false);
        lines.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                linesInputMethodTextChanged(evt);
            }
        });

        BT_Save.setText("Save");
        BT_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BT_SaveActionPerformed(evt);
            }
        });

        jButton2.setText("Default");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Volume");

        volumeMusic.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                volumeMusicStateChanged(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Difficulty");

        RB_Easy.setForeground(new java.awt.Color(255, 255, 255));
        RB_Easy.setText("Easy");
        RB_Easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_EasyActionPerformed(evt);
            }
        });

        RB_Normal.setForeground(new java.awt.Color(255, 255, 255));
        RB_Normal.setText("Average");
        RB_Normal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_NormalActionPerformed(evt);
            }
        });

        RB_Hard.setForeground(new java.awt.Color(255, 255, 255));
        RB_Hard.setText("Hard");
        RB_Hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RB_HardActionPerformed(evt);
            }
        });

        cols.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        cols.setModel(new javax.swing.SpinnerNumberModel(10, 8, 30, 1));
        cols.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cols", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        cols.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cols.setFocusable(false);
        cols.setRequestFocusEnabled(false);
        cols.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                colsInputMethodTextChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Dimens√£o");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(lines, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(50, 50, 50)
                                .addComponent(cols)
                                .addGap(83, 83, 83))
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(BT_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(91, 91, 91))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(RB_Easy)
                                .addGap(30, 30, 30)
                                .addComponent(RB_Normal)
                                .addGap(26, 26, 26)
                                .addComponent(RB_Hard))
                            .addComponent(volumeMusic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lines, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addComponent(volumeMusic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RB_Easy)
                    .addComponent(RB_Normal)
                    .addComponent(RB_Hard))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BT_Save, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BT_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BT_SaveActionPerformed
        // Get the values of lines and cols from the input fields
        int liness = (Integer) lines.getValue();
        int colss = (Integer) cols.getValue();
        // Update the configuration with the new values
        this.config.setLines(liness);
        this.config.setCols(colss);
        this.config.setSound(SoundPlayer.actualVolume);
        // Write the updated configuration to the file
        this.config.WriteConfig(config.getCurrentPath());
        // Close the current frame
        dispose();
    }//GEN-LAST:event_BT_SaveActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Set the lines and cols to a specific value
        this.config.setLines(10);
        this.config.setCols(10);

        // Update the values of the lines and cols input fields
        lines.setValue(this.config.getLines());
        cols.setValue(this.config.getCols());

        // Set the RB_Normal radio button as selected
        RB_Normal.setSelected(true);

        // Set the RB_Easy and RB_Hard radio buttons as not selected
        RB_Easy.setSelected(false);
        RB_Hard.setSelected(false);

        // Set the difficulty to 1 (assuming 1 represents normal difficulty)
        this.config.setDifficulty(1);

        // Set the volumeMusic slider value to 50
        volumeMusic.setValue(50);

        // Change the volume of the sound player to match the slider value
        soundp.changeVolumeSlide(50);

        // Set the volume of the Tetris music in the sound player
        soundp.setVolumeTetrisMusic();

        // Print "deu?" to the console (commented out)
        // System.out.println("deu?");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void volumeMusicStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_volumeMusicStateChanged
        // Print the current value of the volumeMusic slider to the console
        // System.out.println("valor mudou para: " + volumeMusic.getValue());

        // Update the configuration with the new volume value from the slider
        this.config.changeVolumeSlide(volumeMusic.getValue());

        // Set the volume of the Tetris music in the configuration
        this.config.setVolumeTetrisMusic();
    }//GEN-LAST:event_volumeMusicStateChanged

    private void RB_EasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_EasyActionPerformed
        // Deselect the RB_Hard radio button
        RB_Hard.setSelected(false);

        // Deselect the RB_Normal radio button
        RB_Normal.setSelected(false);
        
        RB_Easy.setSelected(true);

        // Set the difficulty level to 0 (corresponding to RB_Easy)
        this.config.setDifficulty(0);
    }//GEN-LAST:event_RB_EasyActionPerformed

    private void RB_NormalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_NormalActionPerformed
        
         // Deselect the RB_Easy radio button
         RB_Easy.setSelected(false);

         RB_Normal.setSelected(true);
         
         // Deselect the RB_Hard radio button
         RB_Hard.setSelected(false);
        
     
        // Deselect the RB_Easy radio button
        RB_Easy.setSelected(false);

        // Deselect the RB_Hard radio button
        RB_Hard.setSelected(false);

        // Set the difficulty level to 1 (corresponding to RB_Normal)
        this.config.setDifficulty(1);
    }//GEN-LAST:event_RB_NormalActionPerformed

    private void RB_HardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RB_HardActionPerformed
        // Deselect the RB_Easy radio button
        RB_Easy.setSelected(false);

        // Deselect the RB_Hard radio button
        RB_Normal.setSelected(false);

        RB_Hard.setSelected(true);
        // Set the difficulty level to 1 (corresponding to RB_Normal)
        this.config.setDifficulty(2);
    }//GEN-LAST:event_RB_HardActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // Create a new instance of the MainApp class and set its visibility to true
        new MainApp().setVisible(true);
    }//GEN-LAST:event_formWindowClosed

    private void linesInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_linesInputMethodTextChanged
        int value = Integer.parseInt((String) lines.getValue());  // Convert to int if needed

        if (value < 8 || value > 30) {
            lines.setValue(this.config.getLines());
        }

    }//GEN-LAST:event_linesInputMethodTextChanged

    private void colsInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_colsInputMethodTextChanged
        int value = Integer.parseInt((String) cols.getValue());  // Convert to int if needed

        if (value < 8 || value > 30) {
            cols.setValue(this.config.getCols());
        }
    }//GEN-LAST:event_colsInputMethodTextChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configs.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BT_Save;
    private javax.swing.JRadioButton RB_Easy;
    private javax.swing.JRadioButton RB_Hard;
    private javax.swing.JRadioButton RB_Normal;
    private javax.swing.JSpinner cols;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner lines;
    private javax.swing.JSlider volumeMusic;
    // End of variables declaration//GEN-END:variables
}
